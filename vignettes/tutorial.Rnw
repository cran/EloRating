\documentclass{article}
\author{Christof Neumann \& Lars Kulik}
\title{\texttt{EloRating} - a brief tutorial \\ \large version 0.43}
%\usepackage{hyperref}
%\usepackage[backend=bibtex, sorting=none]{biblatex}
%\bibliography{references}
\usepackage{natbib}
\bibliographystyle{agsm}
\usepackage[utf8]{inputenc}
\usepackage{Sweave}
\usepackage[margin=1.5in]{geometry}
\usepackage{hyperref}
\hypersetup{
    colorlinks,
    citecolor=black,
    filecolor=black,
    linkcolor=black,
    urlcolor=black
}
\begin{document}
\SweaveOpts{concordance=TRUE}
%\VignetteIndexEntry{EloRating-tutorial.Rnw}
<<echo=false>>=
options(width=80)
options(continue=" ")
@


\maketitle
\tableofcontents
\sloppy
\newpage

\section{Preliminary remarks}
\label{sec:prelim}
\paragraph{}
The \texttt{EloRating} package is work in progress. If you have any criticism, suggestions or bugs to report, please let us know.
\paragraph{}
We describe here the main functionalities of the \texttt{EloRating} package.\footnote{Note that one additional package (\texttt{zoo}) has to be installed to make our package functional (e.g. by \texttt{install.packages("zoo")})} Note that for the sake of this tutorial, we first present an example with the minimal amount of data required: a sequence of decided dominance interactions along with the dates\footnote{Dealing with calendar dates in \texttt{R} is prone to unexpected behaviour. We decided to stick to a specific format ("YYYY-MM-DD") and the functions assume that dates appear in this format in the objects from which the functions work.} of these interactions. Even though the package is capable of dealing with undecided interactions (in fact the example file contains this information), we decided to omit this aspect for the sake of clarity in the first part (section \ref{sec:use1}). In addition, this first example is not linked to 'presence' data. In other words, here we assume that all individuals that occur in the data set were present over the entire study period. For the same example utilizing information about presence/absence of individuals and undecided interactions/draws see section \ref{sec:use2}.
\paragraph{}
The fictional data set presented here comprises 250 dominance interactions of 10 individuals.

\section{Package installation and data preparation}
\label{sec:prep}

\paragraph{}
To install the package, just use (given you have a working internet connection):
<<"eloinstall2", echo=TRUE, keep.source=FALSE, eval=FALSE>>=
install.packages("EloRating")
@


\paragraph{}
We assume that you store your data on dominance interactions in some sort of spreadsheet software. While it is possible to read data directly from Excel files (.xls or .xlsx) or SPSS files (.sav),\footnote{see the R packages \texttt{gdata}, \texttt{xlsx} and \texttt{foreign}} we suggest that you store your data in simple (tab-separated) text files. For example, from Excel this is possible via File>Save as... and then choosing "tab-delimited text file" as file format.\footnote{you may also save your file as comma delimited or something similar, but note that you then may need to modify the arguments to \texttt{read.table()} or use \texttt{read.csv()}}

\section{Using \texttt{EloRating}}
\label{sec:use1}
\paragraph{}
Start by loading the package and reading the raw data.\footnote{The example files are in the above described tab-delimited text format and can be found in the package directory. If you don't know where that is check \texttt{.libPaths()}}
<<reading1>>=
library(EloRating)
xdata <- read.table(system.file("ex-sequence.txt", package = 'EloRating'),
                    header=T)
@

Keep in mind that as soon as you use your own data it might be nessary to include absolute paths with the filename.\footnote{see also \texttt{?setwd}} For example:
<<"reading1b", echo=TRUE, keep.source=FALSE, eval=FALSE>>=
xdata <- read.table("c:\\temp\\ex-sequence.txt", 
                    header=TRUE, sep="\t")
@

\subsection{Data checks}
\paragraph{}
We then go on and check whether the data meet the formatting requirements for the remaining functions of the package to work. If there is something appearing not quite right with your data, this function will tell you. "Warnings" can sometimes be ignored (see below), whereas "errors" need to be fixed before the next step. More details on the possible warning and error messages can be found in the help files (\texttt{?seqcheck}).

<<"seqcheck">>=
seqcheck(winner=xdata$winner, loser=xdata$loser, Date=xdata$Date)
@

\subsection{Elo rating calculations}
\paragraph{}
This doesn't give any error message, and so we can go on and calculate the actual Elo ratings and store the results of the calculations in an object we name \texttt{res}. Note that in order to ignore possible "warnings" from \texttt{seqcheck()} the argument \texttt{runcheck=FALSE} has to be set.

<<"eloseq", eval=FALSE>>=
res <- elo.seq(winner=xdata$winner, loser=xdata$loser, Date=xdata$Date,
               runcheck=TRUE)
@
<<"eloseqhidden", eval=TRUE, results=hide, echo=FALSE>>=
res <- elo.seq(winner=xdata$winner, loser=xdata$loser, Date=xdata$Date,
               runcheck=TRUE)
<<summary1>>=
summary(res)
@

\subsection{Extract Elo ratings}
\paragraph{}
The most obvious task perhaps is to obtain Elo ratings of specific individuals on a specific date. This can be achieved by running the function \texttt{extract.elo()} on the object \texttt{res} that was just created. In the output, individuals are ordered by descending Elo ratings.
<<extract.elo>>=
extract.elo(res, "2000-05-28")
extract.elo(res, "2000-05-28", IDs=c("s", "a", "c", "k"))
@

\subsection{Plotting Elo ratings}
\paragraph{}
\texttt{eloplot()} produces quick plots that visualize the development of Elo ratings over time. Note that the example data set contains a rather modest number of interactions and individuals. With larger data sets (both in terms of interactions and individuals), such plots can become messy quickly. Even though it is possible to restrict plotting to date ranges and subsets of individuals, we recommend to create custom plots by directly accessing the \texttt{res} object. Specifically, \texttt{res\$mat} contains raw Elo ratings in a day-by-ID matrix, while the original dates can be found in \texttt{res\$truedates}.

\paragraph{}
The following plot produces Figure \ref{fig:one}.


<<plotting,label=fig1plot>>=
eloplot(res)
@

\begin{figure}[t]
\begin{center}
<<label=fig1,fig=TRUE,echo=FALSE>>=
<<fig1plot>>
@
\end{center}
\caption{Elo ratings of 10 individuals over the entire study period.}
\label{fig:one}
\end{figure}

\paragraph{}
Restricting the date range and selecting only a subset of individuals results in Figure \ref{fig:two}.


<<plotting,label=fig2plot>>=
eloplot(res,ids=c("s", "a", "w", "k", "c"), 
        from="2000-06-05", to="2000-07-04")
@

\begin{figure}[t]
\begin{center}
<<label=fig2,fig=TRUE,echo=FALSE>>=
<<fig2plot>>
@
\end{center}
\caption{Elo ratings of 5 individuals over a month.}
\label{fig:two}
\end{figure}

\paragraph{}
Please note, the plotting function will plot a maximum of 20 individuals. Because we meant the plotting function to be an exploratory tool, you can also select \texttt{ids="random.20"} if you have more than 20 individuals. Please note also that individuals for which you have observed interactions on only one day in the selected date range (regardless of how many interactions on that day!), such individuals will be omitted from the plot. If you wish to plot such individuals as single points in the graph, you will have to use the approach mentioned above, i.e. use the \texttt{res\$mat} and \texttt{res\$truedates} objects. If you need help with that, please get in touch with us.

\section{Incorporating presence data and undecided interactions}
\label{sec:use2}
\paragraph{}
This section demonstrates how to incorporate presence data and undecided interactions. Please note that the presence data needs to cover \textit{every} day during your data collection, i.e. also those days on which no interactions were observed. We start by reading the additional "presence matrix", followed by reformatting the date column in this object to a date format that \texttt{R} is capable of dealing with. 

<<"reading2", echo=TRUE,keep.source=FALSE>>=
#xpres <- read.table("ex-presence.txt", 
                    #header=T, sep="\t")
xpres <- read.table(system.file("ex-presence.txt", package = 'EloRating'), header=T)

xpres[,1] <- as.Date(as.character(xpres[,1]))
@

\paragraph{}
Next, we rerun \texttt{seqcheck()} and \texttt{elo.seq()} with the additional \texttt{presence=} argument as well as incorporating the information about undecided interactions \texttt{draw=} into the latter function. 

<<"seqcheck2">>=
seqcheck(winner=xdata$winner, loser=xdata$loser, 
         Date=xdata$Date, presence=xpres)
@


<<"eloseqhidden2", echo=FALSE, keep.source=FALSE, results=hide>>=
res2 <- elo.seq(winner=xdata$winner, loser=xdata$loser, 
               Date=xdata$Date, presence=xpres, draw=xdata$Draw)
@
<<"eloseq2", echo=TRUE, keep.source=FALSE, eval=FALSE>>=
res2 <- elo.seq(winner=xdata$winner, loser=xdata$loser, 
               Date=xdata$Date, presence=xpres, draw=xdata$Draw)
@

\paragraph{}
Extracting Elo ratings takes advantage of the presence data by either omitting absent IDs from the output or returning them as \texttt{NA}. The differences in ratings stem from incorporating undecided interactions.
<<extract.elo>>=
extract.elo(res2, "2000-05-28")
# note that "s" is absent and omitted
extract.elo(res2, "2000-05-28", IDs=c("s", "a", "c", "k"))
# note that "s" is absent and returned as NA
@

\paragraph{}
Likewise, \texttt{eloplot()} omits absent IDs from the resulting plots.

<<plotting,label=fig3plot>>=
eloplot(res2)
@

\begin{figure}[t]
\begin{center}
<<label=fig3,fig=TRUE,echo=FALSE>>=
<<fig3plot>>
@
\end{center}
\caption{Elo ratings of 10 individuals over the entire study period. Note that several individuals were absent during parts of the date range and are therefore appear with gaps in the plot (e.g. "c" and "f"). Compare to Figure \ref{fig:one}}
\label{fig:three}
\end{figure}


<<plotting,label=fig4plot>>=
eloplot(res2, ids=c("s", "a", "w", "k", "c"), 
        from="2000-06-05", to="2000-07-04")
@

\begin{figure}[t]
\begin{center}
<<label=fig4,fig=TRUE,echo=FALSE>>=
<<fig4plot>>
@
\end{center}
\caption{Elo ratings of 5 individuals over a month. Note that individual "c" is not displayed in the plot, since it has not been present during the date range supplied to \texttt{eloplot()}. Compare to Figure \ref{fig:two}}
\label{fig:four}
\end{figure}

\section{Further functions}
\label{sec:further}
\paragraph{}
In addition to calculate, extract and display/plot Elo ratings, our package also provides some more functions that may be useful in some contexts.

\subsection{hierarchy stability with \texttt{stab.elo()}}
\paragraph{}
\texttt{stab.elo()} can be used to calculate an index of hierarchy stability (\emph{S}, see Neumann et al. (\citeyear{neumann_assessing_2011}) and McDonald and Shizuka (\citeyear{mcdonald_comparative_2013})). Please note that in contrast to the original publication, \emph{S} now is limited to a range between 0 and 1, where 1 indicates a stable hierarchy in which no rank changes occured.
<<stabil>>=
stab.elo(res2, from="2000-05-05", to="2000-06-05")
@

\subsection{individual rating trajectories with \texttt{traj.elo()}}
\paragraph{}
\texttt{traj.elo()} provides information about Elo rating trajectories over time.
<<traj>>=
traj.elo(res2, ID=c("f", "n"),
         from="2000-05-05", to="2000-06-05")
@

\subsection{\texttt{individuals()}}
\paragraph{}
\texttt{individuals()} provides information about which/how many individuals were present on specific dates. When applied over a date \emph{range}, the average number of individuals can be returned as can the coefficient of variation of the number of individuals present on each date. Note that this function has little relevance when the calculation of Elo ratings (see above) is \emph{not} supplemented by presence data.
<<indiv>>=
individuals(res2, from="2000-05-05", to="2000-05-05", outp="N")
individuals(res2, from="2000-05-05", to="2000-06-05", outp="N")
individuals(res2, from="2000-05-05", to="2000-06-05", outp="CV")
individuals(res2, from="2000-05-05", to="2000-06-05", outp="IDs")
@

\subsection{\texttt{winprob()}}
\paragraph{}
\texttt{winprob()} simply returns the expected probablity of an individual winning given its own Elo rating and that of its opponent.
<<winprob>>=
winprob(1000,1200)
winprob(1200,1000)
winprob(1200,1200)
@

\subsection{\texttt{creatematrix()}}
\label{subsec:creatematrix}
\paragraph{}
\texttt{creatematrix()} returns a square matrix which can be used with other, matrix-based algorithms to calculate dominance scores or ranks (e.g. I\&SI (\citealp{de_vries_finding_1998}) or David's score (\citealp{david_ranking_1987,gammell_davids_2003,de_vries_measuring_2006}, see section~\ref{subsec:DS})). If undecided interactions (ties/draws) are present in the data, the user can decide on how to treat them (either 0.5 or 1 for both individuals, or they are omitted (default)). Individuals that were absent during the specified date range are excluded from the matrix by default. In addition, the matrix can be restricted to individuals that had interactions (i.e. \emph{observed} interactions) in the date range.
<<mat>>=
creatematrix(res2)
sum(creatematrix(res2))
creatematrix(res2, drawmethod="0.5")
sum(creatematrix(res2, drawmethod="0.5"))
# "c" and "n" are omitted
creatematrix(res2, c("2000-06-10", "2000-06-16"))
creatematrix(res2, c("2000-06-10", "2000-06-16"), 
             onlyinteracting=TRUE)
@

\subsection{\texttt{randomsequence()}}
\paragraph{}
Finally, \texttt{randomsequence()} creates random data sets, which can be used for simulations for example. It returns a list with two \texttt{data.frame}s (named "seqdat" and "pres" for the actual sequence and presence data, respectively).  By default, it creates a sequence of 100 interactions between 10 individuals. All IDs are present the entire time and there are no undecided interactions. Also by default, IDs are simply single letters and in order to produce realistic data, IDs that appear earlier in alphabetic order are more likely to win any given interaction (\texttt{alphabet=TRUE}). The proportion of reversals (against that order) is by default set to \texttt{reversals=0.1}.

<<simu1>>=
rdata <- randomsequence()
@
<<simu2, eval=FALSE>>=
xres <- elo.seq(rdata$seqdat$winner, rdata$seqdat$loser, 
                rdata$seqdat$Date, presence=rdata$pres)
@
<<simu3, results=hide, echo=FALSE>>=
xres <- elo.seq(rdata$seqdat$winner, rdata$seqdat$loser, 
                rdata$seqdat$Date, presence=rdata$pres)
@
<<simu4>>=
summary(xres)
@

\subsection{David's scores with \texttt{DS()}}
\paragraph{}
With this function you can calculate David's scores (\citealp{david_ranking_1987, gammell_davids_2003, de_vries_measuring_2006}). Note that this function only works on square matrices (see above [section~\ref{subsec:creatematrix}] for how to create a matrix from a sequence).
<<DS>>=
data(bonobos)
DS(bonobos)
@


\subsection{\texttt{randomelo()}}
\label{subsec:DS}
\paragraph{}
This is an experimental function to generate a set of random sequences based on an interaction matrix. Based on the randomly generated sequences, Elo ratings are calculated.
<<echo=FALSE, print=FALSE, results=hide>>=
data(bonobos)
xdata <- randomelo(bonobos, 5)
@
<<eval=FALSE>>=
data(bonobos)
xdata <- randomelo(bonobos, 100)
@
<<>>=
res <- data.frame(ID=colnames(xdata[[1]]), avg=round(colMeans(xdata[[1]]),1))
@
\paragraph{}
Now, compare that to David's scores (figure~\ref{fig:five}).\footnote{Note, the plot you will get will differ because the generation of Elo ratings is based on \textit{random} sequences}
<<>>=
ds <- DS(bonobos)
ds <- ds[order(ds$ID), ]
@

<<plotting,label=fig5plot>>=
plot(ds$normDS, res$avg, xlab="David's score", 
     ylab="randomized average Elo rating", las=1)
@

\begin{figure}
\begin{center}
<<label=fig5,fig=TRUE,echo=FALSE, height=4>>=
<<fig5plot>>
@
\end{center}
\caption{David's scores and average randomized Elo ratings from seven bonobos (data taken from \citealp{de_vries_measuring_2006})}
\label{fig:five}
\end{figure}

\subsection{proportion of unknown relationships with \texttt{prunk()}}
\paragraph{}
This function lets you determine how large the proportion of dyads in your data set is for which no interactions have been observed. You can use this function on both the results of \texttt{elo.seq()} or an interaction matrix. If used on an \texttt{eloobject}, you will see as a result the unknown relationships for all dyads that were found in the date range, and additionally restricted to those dyads that were actually co-resident at some point during the date range. In the example, this results in the identical output since all dyads were co-resident at some point. Of course, the accuracy of the second part of the output depends on presence data being supplied. Note, for matrices, we cannot control for coresidency, so the second part of the output is omitted if \texttt{prunk()} is used with a matrix.
<<results=hide>>=
data(adv); data(advpres)
x <- elo.seq(winner=adv$winner, loser=adv$loser, Date=adv$Date, 
             presence=advpres)
@
<<>>=
prunk(x, c("2010-01-01", "2010-01-15"))
mat <- creatematrix(x, c("2010-01-01", "2010-01-15"))
prunk(mat)
@




%\printbibliography % to be used with: \usepackage[backend=bibtex, sorting=none]{biblatex}
\bibliography{elotutrefs}
%\bibliographystyle{authordate1}
\end{document}